//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HASELONEEntities : DbContext
    {
        public HASELONEEntities()
            : base("name=HASELONEEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cm_Customer> Cm_Customer { get; set; }
        public virtual DbSet<Cm_CustomerAuthenticators> Cm_CustomerAuthenticators { get; set; }
        public virtual DbSet<Cm_CustomerInterviews> Cm_CustomerInterviews { get; set; }
        public virtual DbSet<Cm_CustomerLocations> Cm_CustomerLocations { get; set; }
        public virtual DbSet<Cm_CustomerMachineparks> Cm_CustomerMachineparks { get; set; }
        public virtual DbSet<Cm_CustomerRequest> Cm_CustomerRequest { get; set; }
        public virtual DbSet<Cm_CustomerSalesmans> Cm_CustomerSalesmans { get; set; }
        public virtual DbSet<Cm_Interview> Cm_Interview { get; set; }
        public virtual DbSet<Cm_MachineparkCategory> Cm_MachineparkCategory { get; set; }
        public virtual DbSet<Cm_MachineparkMark> Cm_MachineparkMark { get; set; }
        public virtual DbSet<Cm_MachineparkOwnership> Cm_MachineparkOwnership { get; set; }
        public virtual DbSet<Cm_MachineparkRental> Cm_MachineparkRental { get; set; }
        public virtual DbSet<Cm_MachineparkYear> Cm_MachineparkYear { get; set; }
        public virtual DbSet<Gn_Area> Gn_Area { get; set; }
        public virtual DbSet<Gn_AreaCity> Gn_AreaCity { get; set; }
        public virtual DbSet<Gn_AreaCityRegions> Gn_AreaCityRegions { get; set; }
        public virtual DbSet<Gn_Category> Gn_Category { get; set; }
        public virtual DbSet<Gn_CategoryDetails> Gn_CategoryDetails { get; set; }
        public virtual DbSet<Gn_Combos> Gn_Combos { get; set; }
        public virtual DbSet<Gn_ComboTypes> Gn_ComboTypes { get; set; }
        public virtual DbSet<Gn_ConnectionChannel> Gn_ConnectionChannel { get; set; }
        public virtual DbSet<Gn_ContentManagement> Gn_ContentManagement { get; set; }
        public virtual DbSet<Gn_ContentTypes> Gn_ContentTypes { get; set; }
        public virtual DbSet<Gn_Control> Gn_Control { get; set; }
        public virtual DbSet<Gn_ControlAuthorities> Gn_ControlAuthorities { get; set; }
        public virtual DbSet<Gn_Department> Gn_Department { get; set; }
        public virtual DbSet<Gn_DepartmentRoles> Gn_DepartmentRoles { get; set; }
        public virtual DbSet<Gn_InterviewImportant> Gn_InterviewImportant { get; set; }
        public virtual DbSet<Gn_ModulsAndMenus> Gn_ModulsAndMenus { get; set; }
        public virtual DbSet<Gn_Notifications> Gn_Notifications { get; set; }
        public virtual DbSet<Gn_Role> Gn_Role { get; set; }
        public virtual DbSet<Gn_RoleRelation> Gn_RoleRelation { get; set; }
        public virtual DbSet<Gn_Sector> Gn_Sector { get; set; }
        public virtual DbSet<Gn_Segment> Gn_Segment { get; set; }
        public virtual DbSet<Gn_User> Gn_User { get; set; }
        public virtual DbSet<Gn_UserGroup> Gn_UserGroup { get; set; }
        public virtual DbSet<Gn_UserGroupRights> Gn_UserGroupRights { get; set; }
        public virtual DbSet<Gn_UserModuls> Gn_UserModuls { get; set; }
        public virtual DbSet<Gn_UserRights> Gn_UserRights { get; set; }
        public virtual DbSet<Gn_UserRoles> Gn_UserRoles { get; set; }
        public virtual DbSet<Log_Cm_Customer> Log_Cm_Customer { get; set; }
        public virtual DbSet<Log_Cm_CustomerAuthenticators> Log_Cm_CustomerAuthenticators { get; set; }
        public virtual DbSet<Log_Cm_CustomerInterviews> Log_Cm_CustomerInterviews { get; set; }
        public virtual DbSet<Log_Cm_CustomerLocations> Log_Cm_CustomerLocations { get; set; }
        public virtual DbSet<Log_Cm_CustomerMachineparks> Log_Cm_CustomerMachineparks { get; set; }
        public virtual DbSet<Log_Cm_CustomerRequest> Log_Cm_CustomerRequest { get; set; }
        public virtual DbSet<Log_Cm_CustomerSalesmans> Log_Cm_CustomerSalesmans { get; set; }
        public virtual DbSet<Log_Cm_MachineparkRental> Log_Cm_MachineparkRental { get; set; }
        public virtual DbSet<Ns_BranchCode> Ns_BranchCode { get; set; }
        public virtual DbSet<Pr_MachineModel> Pr_MachineModel { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<AppLog> AppLog { get; set; }
    
        public virtual int Cm_CustomerDelete(Nullable<int> customerId, Nullable<int> userId, Nullable<int> deleteorRecovery)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var deleteorRecoveryParameter = deleteorRecovery.HasValue ?
                new ObjectParameter("DeleteorRecovery", deleteorRecovery) :
                new ObjectParameter("DeleteorRecovery", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Cm_CustomerDelete", customerIdParameter, userIdParameter, deleteorRecoveryParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Cm_CustomerMachineparksalesmanControl(Nullable<int> customerMachineparkCategoriesId, Nullable<int> customerId, Nullable<int> salesmanId, ObjectParameter returnScalar)
        {
            var customerMachineparkCategoriesIdParameter = customerMachineparkCategoriesId.HasValue ?
                new ObjectParameter("CustomerMachineparkCategoriesId", customerMachineparkCategoriesId) :
                new ObjectParameter("CustomerMachineparkCategoriesId", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var salesmanIdParameter = salesmanId.HasValue ?
                new ObjectParameter("SalesmanId", salesmanId) :
                new ObjectParameter("SalesmanId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Cm_CustomerMachineparksalesmanControl", customerMachineparkCategoriesIdParameter, customerIdParameter, salesmanIdParameter, returnScalar);
        }
    
        public virtual int Cm_GetCustomersByUserId(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Cm_GetCustomersByUserId", userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Cm_MachineParkSalesmanControlForMachinepark(Nullable<int> customerMachineparkCategoriesId, Nullable<int> customerId, ObjectParameter returnScalar)
        {
            var customerMachineparkCategoriesIdParameter = customerMachineparkCategoriesId.HasValue ?
                new ObjectParameter("CustomerMachineparkCategoriesId", customerMachineparkCategoriesId) :
                new ObjectParameter("CustomerMachineparkCategoriesId", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Cm_MachineParkSalesmanControlForMachinepark", customerMachineparkCategoriesIdParameter, customerIdParameter, returnScalar);
        }
    
        public virtual int CreateLog(Nullable<int> id, string tableName)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateLog", idParameter, tableNameParameter);
        }
    
        public virtual int Dfs_CariDelete(Nullable<int> cm_CustomerId, Nullable<int> cm_UserId)
        {
            var cm_CustomerIdParameter = cm_CustomerId.HasValue ?
                new ObjectParameter("Cm_CustomerId", cm_CustomerId) :
                new ObjectParameter("Cm_CustomerId", typeof(int));
    
            var cm_UserIdParameter = cm_UserId.HasValue ?
                new ObjectParameter("Cm_UserId", cm_UserId) :
                new ObjectParameter("Cm_UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Dfs_CariDelete", cm_CustomerIdParameter, cm_UserIdParameter);
        }
    
        [DbFunction("HASELONEEntities", "GetAreaStats")]
        public virtual IQueryable<GetAreaStats_Result> GetAreaStats(Nullable<int> categoryId, string areaIds, string salesManIds, string machineparkCategoryIds, string markIds, string segmentIds)
        {
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var areaIdsParameter = areaIds != null ?
                new ObjectParameter("AreaIds", areaIds) :
                new ObjectParameter("AreaIds", typeof(string));
    
            var salesManIdsParameter = salesManIds != null ?
                new ObjectParameter("SalesManIds", salesManIds) :
                new ObjectParameter("SalesManIds", typeof(string));
    
            var machineparkCategoryIdsParameter = machineparkCategoryIds != null ?
                new ObjectParameter("MachineparkCategoryIds", machineparkCategoryIds) :
                new ObjectParameter("MachineparkCategoryIds", typeof(string));
    
            var markIdsParameter = markIds != null ?
                new ObjectParameter("MarkIds", markIds) :
                new ObjectParameter("MarkIds", typeof(string));
    
            var segmentIdsParameter = segmentIds != null ?
                new ObjectParameter("SegmentIds", segmentIds) :
                new ObjectParameter("SegmentIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetAreaStats_Result>("[HASELONEEntities].[GetAreaStats](@CategoryId, @AreaIds, @SalesManIds, @MachineparkCategoryIds, @MarkIds, @SegmentIds)", categoryIdParameter, areaIdsParameter, salesManIdsParameter, machineparkCategoryIdsParameter, markIdsParameter, segmentIdsParameter);
        }
    
        [DbFunction("HASELONEEntities", "GetClassifiedMachineparkCounts")]
        public virtual IQueryable<GetClassifiedMachineparkCounts_Result> GetClassifiedMachineparkCounts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetClassifiedMachineparkCounts_Result>("[HASELONEEntities].[GetClassifiedMachineparkCounts]()");
        }
    
        public virtual ObjectResult<GetSalesmanListForAreaAndOperationType_Result> GetSalesmanListForAreaAndOperationType(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSalesmanListForAreaAndOperationType_Result>("GetSalesmanListForAreaAndOperationType", userIdParameter);
        }
    
        [DbFunction("HASELONEEntities", "GetSalesmans")]
        public virtual IQueryable<GetSalesmans_Result> GetSalesmans(string keyword)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetSalesmans_Result>("[HASELONEEntities].[GetSalesmans](@Keyword)", keywordParameter);
        }
    
        [DbFunction("HASELONEEntities", "GetSalesmanStats")]
        public virtual IQueryable<GetSalesmanStats_Result> GetSalesmanStats(Nullable<int> categoryId, string areaIds, string salesManIds, string machineparkCategoryIds, string markIds, string segmentIds)
        {
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var areaIdsParameter = areaIds != null ?
                new ObjectParameter("AreaIds", areaIds) :
                new ObjectParameter("AreaIds", typeof(string));
    
            var salesManIdsParameter = salesManIds != null ?
                new ObjectParameter("SalesManIds", salesManIds) :
                new ObjectParameter("SalesManIds", typeof(string));
    
            var machineparkCategoryIdsParameter = machineparkCategoryIds != null ?
                new ObjectParameter("MachineparkCategoryIds", machineparkCategoryIds) :
                new ObjectParameter("MachineparkCategoryIds", typeof(string));
    
            var markIdsParameter = markIds != null ?
                new ObjectParameter("MarkIds", markIds) :
                new ObjectParameter("MarkIds", typeof(string));
    
            var segmentIdsParameter = segmentIds != null ?
                new ObjectParameter("SegmentIds", segmentIds) :
                new ObjectParameter("SegmentIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetSalesmanStats_Result>("[HASELONEEntities].[GetSalesmanStats](@CategoryId, @AreaIds, @SalesManIds, @MachineparkCategoryIds, @MarkIds, @SegmentIds)", categoryIdParameter, areaIdsParameter, salesManIdsParameter, machineparkCategoryIdsParameter, markIdsParameter, segmentIdsParameter);
        }
    
        [DbFunction("HASELONEEntities", "GetSegmentStats")]
        public virtual IQueryable<GetSegmentStats_Result> GetSegmentStats(Nullable<int> categoryId, string areaIds, string salesManIds, string machineparkCategoryIds, string markIds)
        {
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var areaIdsParameter = areaIds != null ?
                new ObjectParameter("AreaIds", areaIds) :
                new ObjectParameter("AreaIds", typeof(string));
    
            var salesManIdsParameter = salesManIds != null ?
                new ObjectParameter("SalesManIds", salesManIds) :
                new ObjectParameter("SalesManIds", typeof(string));
    
            var machineparkCategoryIdsParameter = machineparkCategoryIds != null ?
                new ObjectParameter("MachineparkCategoryIds", machineparkCategoryIds) :
                new ObjectParameter("MachineparkCategoryIds", typeof(string));
    
            var markIdsParameter = markIds != null ?
                new ObjectParameter("MarkIds", markIds) :
                new ObjectParameter("MarkIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetSegmentStats_Result>("[HASELONEEntities].[GetSegmentStats](@CategoryId, @AreaIds, @SalesManIds, @MachineparkCategoryIds, @MarkIds)", categoryIdParameter, areaIdsParameter, salesManIdsParameter, machineparkCategoryIdsParameter, markIdsParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        [DbFunction("HASELONEEntities", "StringSplit")]
        public virtual IQueryable<string> StringSplit(string stringValue, string delimiter)
        {
            var stringValueParameter = stringValue != null ?
                new ObjectParameter("StringValue", stringValue) :
                new ObjectParameter("StringValue", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("Delimiter", delimiter) :
                new ObjectParameter("Delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<string>("[HASELONEEntities].[StringSplit](@StringValue, @Delimiter)", stringValueParameter, delimiterParameter);
        }
    }
}
